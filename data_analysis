{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1xqA7qLEJtdt9NBGUDe9-lXqXW-jWafZc","authorship_tag":"ABX9TyNXNlo2V8v9soU7uA4UoGSn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"zvCCpBAZidug","executionInfo":{"status":"ok","timestamp":1733366574255,"user_tz":300,"elapsed":2562,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"3bbfc0ec-31b3-455f-d960-c1f27732b080"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0.1  Unnamed: 0        Date   Weekday Shift   Hour  TOTAL  \\\n","0                 0           0  2021-06-01   Tuesday     A   1:30    1.0   \n","1                 1          42  2021-06-01   Tuesday     A   2:30    2.0   \n","2                 2          30  2021-06-01   Tuesday     A   3:30    6.0   \n","3                 3          31  2021-06-01   Tuesday     A   4:30   19.0   \n","4                 4          32  2021-06-01   Tuesday     A   5:40    8.0   \n","...             ...         ...         ...       ...   ...    ...    ...   \n","61941         65335       65305  2024-08-31  Saturday     E  18:10   33.0   \n","61942         65336       65306  2024-08-31  Saturday     E  19:10   34.0   \n","61943         65337       65307  2024-08-31  Saturday     E  20:00   32.0   \n","61944         65338       65339  2024-08-31  Saturday     E  21:00    0.0   \n","61945         65339       65326  2024-08-31  Saturday     E  22:00    0.0   \n","\n","       TRAILER  BUS  TRUCK  PED/BYC  LOD        Clouds: Precipitation:  \\\n","0            0    0      0        0    0  Partly Cloudy            NaN   \n","1            0    0      0        0    0  Partly Cloudy            NaN   \n","2            0    0      0        0    0  Partly Cloudy            NaN   \n","3            0    0      2        0    0  Partly Cloudy            NaN   \n","4            0    0      0        0    0  Partly Cloudy            NaN   \n","...        ...  ...    ...      ...  ...            ...            ...   \n","61941        0    0      0        0    0  Partly Cloudy            NaN   \n","61942        0    0      0        0    0  Partly Cloudy            NaN   \n","61943        0    0      0        0    0  Partly Cloudy            NaN   \n","61944        0    0      0        0    0  Partly Cloudy            NaN   \n","61945        0    0      0        0    0  Partly Cloudy            NaN   \n","\n","            Wind:    Temperature: Holiday  \n","0      0 - 10 mph  Warm (60 - 80)     NaN  \n","1      0 - 10 mph  Warm (60 - 80)     NaN  \n","2      0 - 10 mph  Warm (60 - 80)     NaN  \n","3      0 - 10 mph  Warm (60 - 80)     NaN  \n","4      0 - 10 mph  Warm (60 - 80)     NaN  \n","...           ...             ...     ...  \n","61941  0 - 10 mph      Hot (> 80)     NaN  \n","61942  0 - 10 mph      Hot (> 80)     NaN  \n","61943  0 - 10 mph      Hot (> 80)     NaN  \n","61944  0 - 10 mph      Hot (> 80)     NaN  \n","61945  0 - 10 mph      Hot (> 80)     NaN  \n","\n","[61946 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-378da93e-db67-4172-b699-666c7f8341cd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0.1</th>\n","      <th>Unnamed: 0</th>\n","      <th>Date</th>\n","      <th>Weekday</th>\n","      <th>Shift</th>\n","      <th>Hour</th>\n","      <th>TOTAL</th>\n","      <th>TRAILER</th>\n","      <th>BUS</th>\n","      <th>TRUCK</th>\n","      <th>PED/BYC</th>\n","      <th>LOD</th>\n","      <th>Clouds:</th>\n","      <th>Precipitation:</th>\n","      <th>Wind:</th>\n","      <th>Temperature:</th>\n","      <th>Holiday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>1:30</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>42</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>2:30</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>3:30</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>31</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>4:30</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>32</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>5:40</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>61941</th>\n","      <td>65335</td>\n","      <td>65305</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>18:10</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>61942</th>\n","      <td>65336</td>\n","      <td>65306</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>19:10</td>\n","      <td>34.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>61943</th>\n","      <td>65337</td>\n","      <td>65307</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>20:00</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>61944</th>\n","      <td>65338</td>\n","      <td>65339</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>21:00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>61945</th>\n","      <td>65339</td>\n","      <td>65326</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>22:00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>61946 rows Ã— 17 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-378da93e-db67-4172-b699-666c7f8341cd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-378da93e-db67-4172-b699-666c7f8341cd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-378da93e-db67-4172-b699-666c7f8341cd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eca5d36b-b988-4465-9d21-06ea48ac727c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eca5d36b-b988-4465-9d21-06ea48ac727c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eca5d36b-b988-4465-9d21-06ea48ac727c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_393335f4-e230-4bae-aa72-b69761a8bc0b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_393335f4-e230-4bae-aa72-b69761a8bc0b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 61946,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0.1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18862,\n        \"min\": 0,\n        \"max\": 65339,\n        \"num_unique_values\": 61946,\n        \"samples\": [\n          52270,\n          36449,\n          42341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18862,\n        \"min\": 0,\n        \"max\": 65339,\n        \"num_unique_values\": 61946,\n        \"samples\": [\n          52297,\n          36418,\n          42311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1188,\n        \"samples\": [\n          \"2022-04-16\",\n          \"2024-07-31\",\n          \"2023-11-25\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Sunday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Shift\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"B\",\n          \"E\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"18:30\",\n          \"17:50\",\n          \"1:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.777444188236547,\n        \"min\": 0.0,\n        \"max\": 121.0,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          17.0,\n          45.0,\n          50.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRAILER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 33,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          9,\n          6,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 61,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRUCK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 22,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          0,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PED/BYC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 150,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          28,\n          22,\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 70,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          30,\n          38,\n          32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clouds:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Partly Cloudy\",\n          \"Clear\",\n          \"Overcast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precipitation:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Heavy Rain\",\n          \"Steady Rain\",\n          \"Light Rain\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"0 - 10 mph\",\n          \"10 - 15 mph\",\n          \"20 - 25 mph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Hot (> 80)\",\n          \"Cold (< 40)\",\n          \"Warm (60 - 80)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Easter\",\n          \"George Washington Day\",\n          \"Independence Day\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","\n","# Load the uploaded file\n","file_path = '/content/drive/MyDrive/Sim_FinalProject_FerryTraffic/Huyen/Final_Dataset/ archive1/Scotland.csv'\n","data = pd.read_csv(file_path)\n","\n","data\n","\n"]},{"cell_type":"code","source":["# Creating the new column TOTAL_2 based on the given condition\n","data['TOTAL_2'] = data.apply(lambda row: row['TOTAL'] if row['TOTAL'] > 70 else row['TOTAL'] + row['LOD'], axis=1)\n"],"metadata":{"id":"XjblYPmR_TyU","executionInfo":{"status":"ok","timestamp":1733366576312,"user_tz":300,"elapsed":2058,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"12VTgcnF_26A","executionInfo":{"status":"ok","timestamp":1733366576838,"user_tz":300,"elapsed":528,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"3fa10d35-44cb-42dc-ea32-a82c07bba771"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0.1  Unnamed: 0        Date   Weekday Shift   Hour  TOTAL  \\\n","0                 0           0  2021-06-01   Tuesday     A   1:30    1.0   \n","1                 1          42  2021-06-01   Tuesday     A   2:30    2.0   \n","2                 2          30  2021-06-01   Tuesday     A   3:30    6.0   \n","3                 3          31  2021-06-01   Tuesday     A   4:30   19.0   \n","4                 4          32  2021-06-01   Tuesday     A   5:40    8.0   \n","...             ...         ...         ...       ...   ...    ...    ...   \n","61941         65335       65305  2024-08-31  Saturday     E  18:10   33.0   \n","61942         65336       65306  2024-08-31  Saturday     E  19:10   34.0   \n","61943         65337       65307  2024-08-31  Saturday     E  20:00   32.0   \n","61944         65338       65339  2024-08-31  Saturday     E  21:00    0.0   \n","61945         65339       65326  2024-08-31  Saturday     E  22:00    0.0   \n","\n","       TRAILER  BUS  TRUCK  PED/BYC  LOD        Clouds: Precipitation:  \\\n","0            0    0      0        0    0  Partly Cloudy            NaN   \n","1            0    0      0        0    0  Partly Cloudy            NaN   \n","2            0    0      0        0    0  Partly Cloudy            NaN   \n","3            0    0      2        0    0  Partly Cloudy            NaN   \n","4            0    0      0        0    0  Partly Cloudy            NaN   \n","...        ...  ...    ...      ...  ...            ...            ...   \n","61941        0    0      0        0    0  Partly Cloudy            NaN   \n","61942        0    0      0        0    0  Partly Cloudy            NaN   \n","61943        0    0      0        0    0  Partly Cloudy            NaN   \n","61944        0    0      0        0    0  Partly Cloudy            NaN   \n","61945        0    0      0        0    0  Partly Cloudy            NaN   \n","\n","            Wind:    Temperature: Holiday  TOTAL_2  \n","0      0 - 10 mph  Warm (60 - 80)     NaN      1.0  \n","1      0 - 10 mph  Warm (60 - 80)     NaN      2.0  \n","2      0 - 10 mph  Warm (60 - 80)     NaN      6.0  \n","3      0 - 10 mph  Warm (60 - 80)     NaN     19.0  \n","4      0 - 10 mph  Warm (60 - 80)     NaN      8.0  \n","...           ...             ...     ...      ...  \n","61941  0 - 10 mph      Hot (> 80)     NaN     33.0  \n","61942  0 - 10 mph      Hot (> 80)     NaN     34.0  \n","61943  0 - 10 mph      Hot (> 80)     NaN     32.0  \n","61944  0 - 10 mph      Hot (> 80)     NaN      0.0  \n","61945  0 - 10 mph      Hot (> 80)     NaN      0.0  \n","\n","[61946 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-d27a6894-78e2-41ff-bdef-1d9f46626a65\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0.1</th>\n","      <th>Unnamed: 0</th>\n","      <th>Date</th>\n","      <th>Weekday</th>\n","      <th>Shift</th>\n","      <th>Hour</th>\n","      <th>TOTAL</th>\n","      <th>TRAILER</th>\n","      <th>BUS</th>\n","      <th>TRUCK</th>\n","      <th>PED/BYC</th>\n","      <th>LOD</th>\n","      <th>Clouds:</th>\n","      <th>Precipitation:</th>\n","      <th>Wind:</th>\n","      <th>Temperature:</th>\n","      <th>Holiday</th>\n","      <th>TOTAL_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>1:30</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>42</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>2:30</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>3:30</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>31</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>4:30</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>32</td>\n","      <td>2021-06-01</td>\n","      <td>Tuesday</td>\n","      <td>A</td>\n","      <td>5:40</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>NaN</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>61941</th>\n","      <td>65335</td>\n","      <td>65305</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>18:10</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>61942</th>\n","      <td>65336</td>\n","      <td>65306</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>19:10</td>\n","      <td>34.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>61943</th>\n","      <td>65337</td>\n","      <td>65307</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>20:00</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","      <td>32.0</td>\n","    </tr>\n","    <tr>\n","      <th>61944</th>\n","      <td>65338</td>\n","      <td>65339</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>21:00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>61945</th>\n","      <td>65339</td>\n","      <td>65326</td>\n","      <td>2024-08-31</td>\n","      <td>Saturday</td>\n","      <td>E</td>\n","      <td>22:00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Hot (&gt; 80)</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>61946 rows Ã— 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d27a6894-78e2-41ff-bdef-1d9f46626a65')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d27a6894-78e2-41ff-bdef-1d9f46626a65 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d27a6894-78e2-41ff-bdef-1d9f46626a65');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-20fd50b8-f3a7-4acb-ac6c-7b54073c4b34\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20fd50b8-f3a7-4acb-ac6c-7b54073c4b34')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-20fd50b8-f3a7-4acb-ac6c-7b54073c4b34 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1ae135a4-dd76-4855-810f-fe4e47962aed\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1ae135a4-dd76-4855-810f-fe4e47962aed button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 61946,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0.1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18862,\n        \"min\": 0,\n        \"max\": 65339,\n        \"num_unique_values\": 61946,\n        \"samples\": [\n          52270,\n          36449,\n          42341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18862,\n        \"min\": 0,\n        \"max\": 65339,\n        \"num_unique_values\": 61946,\n        \"samples\": [\n          52297,\n          36418,\n          42311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1188,\n        \"samples\": [\n          \"2022-04-16\",\n          \"2024-07-31\",\n          \"2023-11-25\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Sunday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Shift\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"B\",\n          \"E\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"18:30\",\n          \"17:50\",\n          \"1:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.777444188236547,\n        \"min\": 0.0,\n        \"max\": 121.0,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          17.0,\n          45.0,\n          50.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRAILER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 33,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          9,\n          6,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 61,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRUCK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 22,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          0,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PED/BYC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 150,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          28,\n          22,\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 70,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          30,\n          38,\n          32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clouds:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Partly Cloudy\",\n          \"Clear\",\n          \"Overcast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precipitation:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Heavy Rain\",\n          \"Steady Rain\",\n          \"Light Rain\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"0 - 10 mph\",\n          \"10 - 15 mph\",\n          \"20 - 25 mph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Hot (> 80)\",\n          \"Cold (< 40)\",\n          \"Warm (60 - 80)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Easter\",\n          \"George Washington Day\",\n          \"Independence Day\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL_2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.934913783176967,\n        \"min\": 0.0,\n        \"max\": 140.0,\n        \"num_unique_values\": 122,\n        \"samples\": [\n          39.0,\n          17.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["filtered_data = data[data['TOTAL'] > 50]"],"metadata":{"id":"vS-KfXlEAHjt","executionInfo":{"status":"ok","timestamp":1733366702983,"user_tz":300,"elapsed":126,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from scipy.stats import poisson\n","\n","\n","# Extracting TOTAL_2 values for rows where LOD > 0\n","lod_positive_total_2 = filtered_data[filtered_data['LOD'] > 0]['TOTAL_2']\n","\n","# Calculating the mean again for clarity\n","mean_total_2_lod_positive = lod_positive_total_2.mean()\n","\n","# Generating a range of possible values for the discrete distribution\n","x_values_lod = range(0, int(lod_positive_total_2.max()) + 1)\n","poisson_probs_lod = [poisson.pmf(x, mean_total_2_lod_positive) for x in x_values_lod]\n","\n","# Plotting the distribution\n","plt.figure(figsize=(10, 6))\n","plt.bar(x_values_lod, poisson_probs_lod, color='#ffee65', edgecolor='black', alpha=0.7)\n","plt.axvline(mean_total_2_lod_positive, color='#fd7f6f', linestyle='--', label=f'Mean: {mean_total_2_lod_positive:.2f}')\n","plt.title('Distribution for Total Number of Vehicles in 30-min cycles for Large Ferries')\n","plt.xlabel('Number of Vehicles')\n","plt.ylabel('Probability')\n","plt.grid(axis='y', linestyle='--', alpha=0.7)\n","plt.xticks(range(20, int(lod_positive_total_2.max()) + 1, 10), fontsize=10, rotation=45)  # Starting x-axis from 20\n","plt.xlim(20, int(lod_positive_total_2.max()) + 1)  # Setting the x-axis limits\n","plt.legend(fontsize=12)\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":608},"id":"tCyuTwEhA0jA","executionInfo":{"status":"ok","timestamp":1733366705367,"user_tz":300,"elapsed":1016,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"d52350a9-85b7-4c28-ab1b-783722f1fc0a"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plotting a histogram of the actual TOTAL_2 data where LOD > 0\n","plt.figure(figsize=(10, 6))\n","plt.hist(lod_positive_total_2, bins=30, color='#7eb0d5', edgecolor='black', alpha=0.7)\n","plt.axvline(mean_total_2_lod_positive, color='#fd7f6f', linestyle='--', label=f'Mean: {mean_total_2_lod_positive:.2f}')\n","plt.title('Histogram of Total Number of Vehicles in 30-min cycles for Small Ferries')\n","plt.xlabel('Number of Vehicles')\n","plt.ylabel('Frequency')\n","plt.grid(axis='y', linestyle='--', alpha=0.7)\n","plt.legend()\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":608},"id":"wpt4ZYcJHK7I","executionInfo":{"status":"ok","timestamp":1733366709975,"user_tz":300,"elapsed":520,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"0f732ff7-4a37-42ac-b36d-51964db52ff3"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}