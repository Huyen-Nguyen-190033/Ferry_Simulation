{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1ApMVr7DIQ7nAC9acQORZAxzWgdW7YOda","authorship_tag":"ABX9TyMwnLNo05mPwngYMPV/Hyr7"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"e9GZ7O5xz1Xc","executionInfo":{"status":"ok","timestamp":1730211989752,"user_tz":240,"elapsed":6172,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"collapsed":true},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","\n","\n","file_path = '/content/drive/MyDrive/Sim_FinalProject_FerryTraffic/Data/WM data/Traffic 2023/12 TRAFFIC Dec 2023.xlsm'\n","sheet_name = 'Daily Traffic'\n","\n","save_path = '/content/drive/MyDrive/Sim_FinalProject_FerryTraffic/Huyen/Scotland_0621_0824/Scotland_23/12_23_ts.csv'\n","start_date = '2023-12-01'\n","end_date = '2023-12-31'\n","avoid_date = []\n","\n","df = pd.read_excel(file_path, sheet_name=sheet_name, header=None)\n","\n","df = df.iloc[:, :25]\n","\n"]},{"cell_type":"code","source":["df = df.fillna(0)\n"],"metadata":{"collapsed":true,"id":"0KjPDQ8wRgjM","executionInfo":{"status":"ok","timestamp":1730211989754,"user_tz":240,"elapsed":16,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = df[(df != 0).any(axis=1)].reset_index(drop=True)\n"],"metadata":{"collapsed":true,"id":"wsY8NvmhgsPb","executionInfo":{"status":"ok","timestamp":1730211989754,"user_tz":240,"elapsed":14,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["#drop the first 2 column (shift+date)\n","df = df.iloc[:, 2:]\n"],"metadata":{"collapsed":true,"id":"KYIalVC0RuN3","executionInfo":{"status":"ok","timestamp":1730211989754,"user_tz":240,"elapsed":13,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"W4aKw64wLOV2","executionInfo":{"status":"ok","timestamp":1730211989754,"user_tz":240,"elapsed":12,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"1ec96d83-f98c-4de0-f00b-afef566a21b8"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            2         3         4         5         6         7         8   \\\n","0     01:00:00  01:30:00  02:00:00  02:30:00  03:00:00  03:30:00  04:00:00   \n","1           TJ        TS        TJ        TS        TJ        TS        TJ   \n","2            1         4         5         2         2         3         0   \n","3            0         0         0         0         0         0         0   \n","4            0         0         0         0         0         0         0   \n","...        ...       ...       ...       ...       ...       ...       ...   \n","1235         0         0         0         0         0         0         0   \n","1236         0         0         0         0         0         0         0   \n","1237         0         0         0         0         0         0         0   \n","1238         0         0         0         0         0         0         0   \n","1239         0         0         0         0         0         0         0   \n","\n","            9         10        11  ...        15        16        17  \\\n","0     04:30:00  05:20:00  05:40:00  ...  07:20:00  07:45:00  08:10:00   \n","1           TS        TJ        TS  ...        TS        TJ        TS   \n","2            6        15        12  ...        16        30        21   \n","3            0         0         0  ...         0         0         2   \n","4            0         0         0  ...         0         0         0   \n","...        ...       ...       ...  ...       ...       ...       ...   \n","1235         0         0         0  ...         0         0         0   \n","1236         0         0         0  ...         0         0         0   \n","1237         0         0         0  ...         0         0         0   \n","1238         0         0         0  ...         0         0         0   \n","1239         0         0         0  ...         0         0         0   \n","\n","            18        19        20        21 22 23 24  \n","0     08:35:00  09:00:00  09:30:00  10:00:00  0  0  0  \n","1           TJ        TS        TJ        TS  0  0  0  \n","2           30        12        36        14  0  0  0  \n","3            0         0         0         1  0  0  0  \n","4            0         0         0         0  0  0  0  \n","...        ...       ...       ...       ... .. .. ..  \n","1235         0         0         0         0  0  0  0  \n","1236         0         0         0         0  0  0  0  \n","1237         0         0         0         0  0  0  0  \n","1238         0         0         0         0  0  0  0  \n","1239         0         0         0         0  0  0  0  \n","\n","[1240 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-8b1554d6-936e-411c-a965-ece65590bd26\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>...</th>\n","      <th>15</th>\n","      <th>16</th>\n","      <th>17</th>\n","      <th>18</th>\n","      <th>19</th>\n","      <th>20</th>\n","      <th>21</th>\n","      <th>22</th>\n","      <th>23</th>\n","      <th>24</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01:00:00</td>\n","      <td>01:30:00</td>\n","      <td>02:00:00</td>\n","      <td>02:30:00</td>\n","      <td>03:00:00</td>\n","      <td>03:30:00</td>\n","      <td>04:00:00</td>\n","      <td>04:30:00</td>\n","      <td>05:20:00</td>\n","      <td>05:40:00</td>\n","      <td>...</td>\n","      <td>07:20:00</td>\n","      <td>07:45:00</td>\n","      <td>08:10:00</td>\n","      <td>08:35:00</td>\n","      <td>09:00:00</td>\n","      <td>09:30:00</td>\n","      <td>10:00:00</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>...</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>TJ</td>\n","      <td>TS</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>16</td>\n","      <td>30</td>\n","      <td>21</td>\n","      <td>30</td>\n","      <td>12</td>\n","      <td>36</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1235</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1236</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1237</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1238</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1239</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1240 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b1554d6-936e-411c-a965-ece65590bd26')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b1554d6-936e-411c-a965-ece65590bd26 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b1554d6-936e-411c-a965-ece65590bd26');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-16ccff96-3bbf-4ce4-bbef-cedbb4cdae4d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-16ccff96-3bbf-4ce4-bbef-cedbb4cdae4d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-16ccff96-3bbf-4ce4-bbef-cedbb4cdae4d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b90bdc00-600b-4ec0-8527-344c62f44ea3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b90bdc00-600b-4ec0-8527-344c62f44ea3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#Scotland route (only take TJ columns - odd col)\n","df_scotland = df.iloc[:, 1::2]\n","# df_scotland"],"metadata":{"collapsed":true,"id":"etjIl-IwSF6v","executionInfo":{"status":"ok","timestamp":1730211989755,"user_tz":240,"elapsed":11,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# drop hour row\n","rows_to_drop = list(range(0, len(df_scotland), 8))\n","\n","df_scotland = df_scotland.drop(rows_to_drop).reset_index(drop=True)\n","\n"],"metadata":{"collapsed":true,"id":"u4Ktk0Idc_3D","executionInfo":{"status":"ok","timestamp":1730211989755,"user_tz":240,"elapsed":10,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# drop tj row\n","rows_to_drop = list(range(0, len(df_scotland), 7))\n","\n","df_scotland = df_scotland.drop(rows_to_drop).reset_index(drop=True)\n"],"metadata":{"collapsed":true,"id":"6VF8Cvu3i8nl","executionInfo":{"status":"ok","timestamp":1730211989958,"user_tz":240,"elapsed":7,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df_scotland"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"jNO_1elvyPuO","executionInfo":{"status":"ok","timestamp":1730211989959,"user_tz":240,"elapsed":7,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"ee8fb620-5118-44fb-a1f9-9bf7589b5b2c"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    3  5  7  9   11  13  15  17  19  21 23\n","0    4  2  3  6  12  13  16  21  12  14  0\n","1    0  0  0  0   0   0   0   2   0   1  0\n","2    0  0  0  0   0   0   0   0   0   0  0\n","3    0  0  0  0   0   1   0   0   0   0  0\n","4    0  0  0  0   0   0   0   0   0   0  0\n","..  .. .. .. ..  ..  ..  ..  ..  ..  .. ..\n","925  0  0  0  0   0   0   0   0   0   0  0\n","926  0  0  0  0   0   0   0   0   0   0  0\n","927  0  0  0  0   0   0   0   0   0   0  0\n","928  0  0  0  0   0   0   0   0   0   0  0\n","929  0  0  0  0   0   0   0   0   0   0  0\n","\n","[930 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-c4d8996c-5e55-461a-abb6-4eff336f3d97\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>3</th>\n","      <th>5</th>\n","      <th>7</th>\n","      <th>9</th>\n","      <th>11</th>\n","      <th>13</th>\n","      <th>15</th>\n","      <th>17</th>\n","      <th>19</th>\n","      <th>21</th>\n","      <th>23</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>12</td>\n","      <td>13</td>\n","      <td>16</td>\n","      <td>21</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>925</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>926</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>927</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>928</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>929</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>930 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4d8996c-5e55-461a-abb6-4eff336f3d97')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4d8996c-5e55-461a-abb6-4eff336f3d97 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4d8996c-5e55-461a-abb6-4eff336f3d97');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23aa71a3-14c6-417c-81bc-9b3fe5538922\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23aa71a3-14c6-417c-81bc-9b3fe5538922')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23aa71a3-14c6-417c-81bc-9b3fe5538922 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_690d1a8e-3b31-4de0-9add-c0b85c7d3d87\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_scotland')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_690d1a8e-3b31-4de0-9add-c0b85c7d3d87 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_scotland');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_scotland","summary":"{\n  \"name\": \"df_scotland\",\n  \"rows\": 930,\n  \"fields\": [\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 61,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          28,\n          11,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 62,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          3,\n          25,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 53,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          45,\n          21,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 56,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          7,\n          48,\n          29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          32,\n          51,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 13,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 65,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          51,\n          43,\n          45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 15,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 64,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          40,\n          57,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 17,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 63,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          42,\n          44,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 19,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 51,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          32,\n          36,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 21,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 54,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          5,\n          20,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 23,\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          18,\n          14,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# list for total\n","total = df_scotland.iloc[::6].values.tolist()\n","\n"],"metadata":{"collapsed":true,"id":"JwG5jQdXwakk","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":10,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# total"],"metadata":{"id":"KZ21DN6q-rEw","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":9,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["flattened_data = [item for sublist in total for item in sublist]\n","\n","# Create a DataFrame with total column\n","df_total = pd.DataFrame(flattened_data, columns=[\"TOTAL\"])\n"],"metadata":{"id":"fq424P6_zd6B","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":9,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["df_total"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Ky7jC6hZ-zy7","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":8,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"827651f2-6ecb-4006-bee1-304af991a579"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      TOTAL\n","0         4\n","1         2\n","2         3\n","3         6\n","4        12\n","...     ...\n","1700      0\n","1701      0\n","1702      0\n","1703      0\n","1704      0\n","\n","[1705 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-e81d3665-3985-47c2-a02f-b40b5b11e967\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TOTAL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1700</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1701</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1702</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1703</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1704</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1705 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e81d3665-3985-47c2-a02f-b40b5b11e967')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e81d3665-3985-47c2-a02f-b40b5b11e967 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e81d3665-3985-47c2-a02f-b40b5b11e967');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0b567955-b011-4924-adb3-105476e14a97\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b567955-b011-4924-adb3-105476e14a97')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0b567955-b011-4924-adb3-105476e14a97 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_20f68f0c-f543-49dd-b6d5-dd1b8d238e76\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_total')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_20f68f0c-f543-49dd-b6d5-dd1b8d238e76 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_total');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_total","summary":"{\n  \"name\": \"df_total\",\n  \"rows\": 1705,\n  \"fields\": [\n    {\n      \"column\": \"TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          62,\n          54,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# list for trailer\n","trailer = df_scotland.iloc[1::6].values.tolist()\n"],"metadata":{"collapsed":true,"id":"j1CMvYFyw51n","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":6,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["flattened_data = [item for sublist in trailer for item in sublist]\n","\n","# Create a DataFrame with a trailer column\n","df_total[\"TRAILER\"] = flattened_data"],"metadata":{"collapsed":true,"id":"SmflDRJ9Kayf","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":6,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# list for bus\n","bus = df_scotland.iloc[2::6].values.tolist()\n"],"metadata":{"collapsed":true,"id":"7J6Gebf-xSd1","executionInfo":{"status":"ok","timestamp":1730211990153,"user_tz":240,"elapsed":5,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["flattened_data = [item for sublist in bus for item in sublist]\n","\n","# Create a DataFrame with a bus column\n","df_total[\"BUS\"] = flattened_data"],"metadata":{"id":"9BjXyi9dKwZ8","executionInfo":{"status":"ok","timestamp":1730211990307,"user_tz":240,"elapsed":8,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# list for truck\n","truck = df_scotland.iloc[3::6].values.tolist()"],"metadata":{"collapsed":true,"id":"MDVP11XVxZx9","executionInfo":{"status":"ok","timestamp":1730211990307,"user_tz":240,"elapsed":7,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["flattened_data = [item for sublist in truck for item in sublist]\n","\n","# Create a DataFrame with a truck column\n","df_total[\"TRUCK\"] = flattened_data"],"metadata":{"collapsed":true,"id":"99usJf-PLBYo","executionInfo":{"status":"ok","timestamp":1730211990307,"user_tz":240,"elapsed":7,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# list for ped\n","ped = df_scotland.iloc[4::6].values.tolist()\n"],"metadata":{"collapsed":true,"id":"zKCmuwRjxft8","executionInfo":{"status":"ok","timestamp":1730211990307,"user_tz":240,"elapsed":6,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["flattened_data = [item for sublist in ped for item in sublist]\n","\n","# Create a DataFrame with a ped column\n","df_total[\"PED/BYC\"] = flattened_data"],"metadata":{"collapsed":true,"id":"5a9XJ6BQLHkY","executionInfo":{"status":"ok","timestamp":1730211990307,"user_tz":240,"elapsed":6,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# list for lod\n","lod = df_scotland.iloc[5::6].values.tolist()\n","\n"],"metadata":{"collapsed":true,"id":"Xm2_9uzAxiE0","executionInfo":{"status":"ok","timestamp":1730211990485,"user_tz":240,"elapsed":184,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["flattened_data = [item for sublist in lod for item in sublist]\n","\n","# Create a DataFrame with a lod column\n","df_total[\"LOD\"] = flattened_data"],"metadata":{"collapsed":true,"id":"8oKBMl2iLMh6","executionInfo":{"status":"ok","timestamp":1730211990662,"user_tz":240,"elapsed":180,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["df_total"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"14jy1g8C1lxO","executionInfo":{"status":"ok","timestamp":1730211990662,"user_tz":240,"elapsed":6,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"b59b2a58-e898-40c0-e7d5-799c674b8984"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      TOTAL  TRAILER  BUS  TRUCK  PED/BYC  LOD\n","0         4        0    0      0        0    0\n","1         2        0    0      0        0    0\n","2         3        0    0      0        0    0\n","3         6        0    0      0        0    0\n","4        12        0    0      0        0    0\n","...     ...      ...  ...    ...      ...  ...\n","1700      0        0    0      0        0    0\n","1701      0        0    0      0        0    0\n","1702      0        0    0      0        0    0\n","1703      0        0    0      0        0    0\n","1704      0        0    0      0        0    0\n","\n","[1705 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-370f8cde-a4df-4857-9881-73071e32c889\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TOTAL</th>\n","      <th>TRAILER</th>\n","      <th>BUS</th>\n","      <th>TRUCK</th>\n","      <th>PED/BYC</th>\n","      <th>LOD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1700</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1701</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1702</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1703</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1704</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1705 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-370f8cde-a4df-4857-9881-73071e32c889')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-370f8cde-a4df-4857-9881-73071e32c889 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-370f8cde-a4df-4857-9881-73071e32c889');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0991e6d8-f23a-462a-8581-e2733e48ef9b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0991e6d8-f23a-462a-8581-e2733e48ef9b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0991e6d8-f23a-462a-8581-e2733e48ef9b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5508991e-6a20-4eb3-a10a-356ebe4f8ce6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_total')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5508991e-6a20-4eb3-a10a-356ebe4f8ce6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_total');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_total","summary":"{\n  \"name\": \"df_total\",\n  \"rows\": 1705,\n  \"fields\": [\n    {\n      \"column\": \"TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          62,\n          54,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRAILER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          6,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRUCK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PED/BYC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 40,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0,\n          18,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["Jamestown"],"metadata":{"id":"Upj2aeS_Yvcl"}},{"cell_type":"code","source":["# import pandas as pd\n","\n","# # Define column names and create an empty DataFrame with these columns\n","# columns = ['Shift', 'Hour', 'TOTAL', 'TRAILER', 'BUS', 'TRUCK', 'PED/BYC', 'LOD']\n","\n","# # Define each hour pattern\n","# pattern_A = [\"Slot 1\", \"Slot 2\", \"Slot 3\", \"Slot 4\", \"Slot 5\", \"Slot 6\", \"Slot 7\", \"Slot 8\", \"Slot 9\", \"Slot 10\", \"Slot 11\"]\n","# pattern_B = [\"Slot 1\", \"Slot 2\", \"Slot 3\", \"Slot 4\", \"Slot 5\", \"Slot 6\", \"Slot 7\", \"Slot 8\", \"Slot 9\", \"Slot 10\", \"Slot 11\"]\n","# pattern_C = [\"Slot 1\", \"Slot 2\", \"Slot 3\", \"Slot 4\", \"Slot 5\", \"Slot 6\", \"Slot 7\", \"Slot 8\", \"Slot 9\", \"Slot 10\", \"Slot 11\"]\n","# pattern_D = [\"Slot 1\", \"Slot 2\", \"Slot 3\", \"Slot 4\", \"Slot 5\", \"Slot 6\", \"Slot 7\", \"Slot 8\", \"Slot 9\", \"Slot 10\", \"Slot 11\"]\n","# pattern_E = [\"Slot 1\", \"Slot 2\", \"Slot 3\", \"Slot 4\", \"Slot 5\", \"Slot 6\", \"Slot 7\", \"Slot 8\", \"Slot 9\", \"Slot 10\", \"Slot 11\"]\n","\n","# # Combine the patterns into a single cycle\n","# hour_pattern = pattern_A + pattern_B + pattern_C + pattern_D + pattern_E\n","\n","# # Determine how many times we need to repeat this pattern and its reverse\n","# shift_pattern = ['A'] * 11 + ['B'] * 11 + ['C'] * 11 + ['D'] * 11 + ['E'] * 11\n","# total_rows = len(shift_pattern) * 31\n","# hour_column = (hour_pattern + hour_pattern[::-1]) * (total_rows // len(hour_pattern) // 2 + 1)\n","# hour_column = hour_column[:total_rows]\n","\n","# new_df = pd.DataFrame(index=range(total_rows), columns=columns)\n","\n","# new_df['Shift'] = shift_pattern * 31\n","# new_df['Hour'] = hour_column\n","\n","# new_df['TOTAL'] = df_total[\"TOTAL\"]\n","# new_df['TRAILER'] = df_total[\"TRAILER\"]\n","# new_df['BUS'] = df_total[\"BUS\"]\n","# new_df['TRUCK'] = df_total[\"TRUCK\"]\n","# new_df['PED/BYC'] = df_total[\"PED/BYC\"]\n","# new_df['LOD'] = df_total[\"LOD\"]\n","\n"],"metadata":{"collapsed":true,"id":"xHDSnsYrZmHE","executionInfo":{"status":"ok","timestamp":1730211990924,"user_tz":240,"elapsed":266,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Define column names and create an empty DataFrame with these columns\n","columns = ['Shift', 'Hour', 'TOTAL', 'TRAILER', 'BUS', 'TRUCK', 'PED/BYC', 'LOD']\n","\n","# Define each hour pattern (no need to define multiple patterns here since they're identical)\n","hour_pattern = [\"Slot 1\", \"Slot 2\", \"Slot 3\", \"Slot 4\", \"Slot 5\", \"Slot 6\", \"Slot 7\", \"Slot 8\", \"Slot 9\", \"Slot 10\", \"Slot 11\"]\n","\n","# Repeat the hour pattern in a straightforward way for each shift and across all days\n","shift_pattern = ['A'] * 11 + ['B'] * 11 + ['C'] * 11 + ['D'] * 11 + ['E'] * 11\n","total_days = 31\n","\n","# Create the total rows based on shifts across all days\n","total_rows = len(shift_pattern) * total_days\n","\n","# Repeat the hour pattern continuously without reversing\n","hour_column = hour_pattern * (total_rows // len(hour_pattern) + 1)\n","hour_column = hour_column[:total_rows]\n","\n","# Create the DataFrame with the corrected hour pattern and shift sequence\n","new_df = pd.DataFrame(index=range(total_rows), columns=columns)\n","new_df['Shift'] = shift_pattern * total_days\n","new_df['Hour'] = hour_column\n","\n","# Assuming df_total contains the necessary columns like TOTAL, TRAILER, etc.\n","new_df['TOTAL'] = df_total[\"TOTAL\"]\n","new_df['TRAILER'] = df_total[\"TRAILER\"]\n","new_df['BUS'] = df_total[\"BUS\"]\n","new_df['TRUCK'] = df_total[\"TRUCK\"]\n","new_df['PED/BYC'] = df_total[\"PED/BYC\"]\n","new_df['LOD'] = df_total[\"LOD\"]\n","\n","# The DataFrame 'new_df' now has a consistent hour ranking across all dates without reversing on specific days.\n"],"metadata":{"id":"jSF7wsNiFBiR","executionInfo":{"status":"ok","timestamp":1730211990924,"user_tz":240,"elapsed":8,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["# Generate a list of dates for August 2024, each repeated 60 times\n","dates = pd.date_range(start=start_date, end=end_date).repeat(55)\n","\n","# Ensure the length of dates matches the length of the DataFrame\n","new_df['Date'] = dates[:len(new_df)]\n","\n"],"metadata":{"id":"vBaSslgAPpmr","executionInfo":{"status":"ok","timestamp":1730211990924,"user_tz":240,"elapsed":7,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["# Add a 'Weekday' column corresponding to each date in the 'Date' column\n","new_df['Weekday'] = new_df['Date'].dt.day_name()\n","\n"],"metadata":{"id":"3k71dJqIPuev","executionInfo":{"status":"ok","timestamp":1730211990924,"user_tz":240,"elapsed":7,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["new_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"XYkgUxfW1-eV","executionInfo":{"status":"ok","timestamp":1730211991121,"user_tz":240,"elapsed":204,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"585b0096-e2b2-4cd6-f123-1dd253394ea2"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Shift     Hour  TOTAL  TRAILER  BUS  TRUCK  PED/BYC  LOD       Date  \\\n","0        A   Slot 1      4        0    0      0        0    0 2023-12-01   \n","1        A   Slot 2      2        0    0      0        0    0 2023-12-01   \n","2        A   Slot 3      3        0    0      0        0    0 2023-12-01   \n","3        A   Slot 4      6        0    0      0        0    0 2023-12-01   \n","4        A   Slot 5     12        0    0      0        0    0 2023-12-01   \n","...    ...      ...    ...      ...  ...    ...      ...  ...        ...   \n","1700     E   Slot 7      0        0    0      0        0    0 2023-12-31   \n","1701     E   Slot 8      0        0    0      0        0    0 2023-12-31   \n","1702     E   Slot 9      0        0    0      0        0    0 2023-12-31   \n","1703     E  Slot 10      0        0    0      0        0    0 2023-12-31   \n","1704     E  Slot 11      0        0    0      0        0    0 2023-12-31   \n","\n","     Weekday  \n","0     Friday  \n","1     Friday  \n","2     Friday  \n","3     Friday  \n","4     Friday  \n","...      ...  \n","1700  Sunday  \n","1701  Sunday  \n","1702  Sunday  \n","1703  Sunday  \n","1704  Sunday  \n","\n","[1705 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-97f213f4-fb51-4fdd-b885-ec1481e25116\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shift</th>\n","      <th>Hour</th>\n","      <th>TOTAL</th>\n","      <th>TRAILER</th>\n","      <th>BUS</th>\n","      <th>TRUCK</th>\n","      <th>PED/BYC</th>\n","      <th>LOD</th>\n","      <th>Date</th>\n","      <th>Weekday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>Slot 1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A</td>\n","      <td>Slot 2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A</td>\n","      <td>Slot 3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A</td>\n","      <td>Slot 4</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A</td>\n","      <td>Slot 5</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1700</th>\n","      <td>E</td>\n","      <td>Slot 7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>1701</th>\n","      <td>E</td>\n","      <td>Slot 8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>1702</th>\n","      <td>E</td>\n","      <td>Slot 9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>1703</th>\n","      <td>E</td>\n","      <td>Slot 10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>1704</th>\n","      <td>E</td>\n","      <td>Slot 11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1705 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97f213f4-fb51-4fdd-b885-ec1481e25116')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97f213f4-fb51-4fdd-b885-ec1481e25116 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97f213f4-fb51-4fdd-b885-ec1481e25116');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9a399052-88c3-413f-b795-77a54d112ab1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a399052-88c3-413f-b795-77a54d112ab1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9a399052-88c3-413f-b795-77a54d112ab1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a041d917-5067-48c7-b466-1fa892d472da\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('new_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a041d917-5067-48c7-b466-1fa892d472da button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('new_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_df","summary":"{\n  \"name\": \"new_df\",\n  \"rows\": 1705,\n  \"fields\": [\n    {\n      \"column\": \"Shift\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"B\",\n          \"E\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Slot 6\",\n          \"Slot 1\",\n          \"Slot 10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          62,\n          54,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRAILER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          6,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRUCK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PED/BYC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 40,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0,\n          18,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-01 00:00:00\",\n        \"max\": \"2023-12-31 00:00:00\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          \"2023-12-28 00:00:00\",\n          \"2023-12-16 00:00:00\",\n          \"2023-12-24 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Friday\",\n          \"Saturday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["\n","sheet_name = 'WeatherSummary'\n","\n","df_weather = pd.read_excel(file_path, sheet_name=sheet_name)"],"metadata":{"id":"NZufak7Cvat_","executionInfo":{"status":"ok","timestamp":1730211991519,"user_tz":240,"elapsed":405,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["df_weather = df_weather.iloc[:, :5]"],"metadata":{"id":"lfWgqaCsvqGu","executionInfo":{"status":"ok","timestamp":1730211991519,"user_tz":240,"elapsed":5,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["# Generate a list of dates for August 2024, each repeated 60 times\n","dates = pd.date_range(start=start_date, end=end_date)\n","\n","# Ensure the length of dates matches the length of the DataFrame\n","df_weather['Date'] = dates\n"],"metadata":{"id":"2w61naFswBTC","executionInfo":{"status":"ok","timestamp":1730211991519,"user_tz":240,"elapsed":4,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["df_weather = df_weather.drop(columns=['Day of Month:'])"],"metadata":{"id":"xIFoAShnwgiR","executionInfo":{"status":"ok","timestamp":1730211991519,"user_tz":240,"elapsed":4,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["df_weather"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"collapsed":true,"id":"z21LHN9Xv5TC","executionInfo":{"status":"ok","timestamp":1730211991744,"user_tz":240,"elapsed":228,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"68e10547-df4f-4ee1-fc25-674eec1d0a48"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Clouds:     Precipitation:        Wind:    Temperature:       Date\n","0   Partly Cloudy         Light Rain   0 - 10 mph  Cool (40 - 60) 2023-12-01\n","1   Partly Cloudy         Light Rain   0 - 10 mph  Warm (60 - 80) 2023-12-02\n","2        Overcast  Intermittent Rain  10 - 15 mph  Warm (60 - 80) 2023-12-03\n","3           Clear                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-04\n","4           Clear                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-05\n","5   Partly Cloudy  Intermittent Rain  30 - 35 mph  Cool (40 - 60) 2023-12-06\n","6           Clear                NaN  15 - 20 mph  Cool (40 - 60) 2023-12-07\n","7   Partly Cloudy                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-08\n","8   Partly Cloudy                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-09\n","9        Overcast  Intermittent Rain  20 - 25 mph  Warm (60 - 80) 2023-12-10\n","10  Partly Cloudy  Intermittent Rain  30 - 35 mph  Cool (40 - 60) 2023-12-11\n","11          Clear                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-12\n","12          Clear                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-13\n","13          Clear                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-14\n","14  Partly Cloudy                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-15\n","15       Overcast                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-16\n","16       Overcast  Intermittent Rain  20 - 25 mph  Cool (40 - 60) 2023-12-17\n","17  Partly Cloudy  Intermittent Rain  30 - 35 mph  Cool (40 - 60) 2023-12-18\n","18          Clear                NaN  30 - 35 mph  Cool (40 - 60) 2023-12-19\n","19          Clear                NaN  20 - 25 mph  Cool (40 - 60) 2023-12-20\n","20          Clear                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-21\n","21  Partly Cloudy                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-22\n","22          Clear                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-23\n","23          Clear                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-24\n","24          Clear                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-25\n","25       Overcast  Intermittent Rain  10 - 15 mph  Cool (40 - 60) 2023-12-26\n","26       Overcast  Intermittent Rain  15 - 20 mph  Cool (40 - 60) 2023-12-27\n","27       Overcast  Intermittent Rain  10 - 15 mph  Cool (40 - 60) 2023-12-28\n","28  Partly Cloudy         Light Rain   0 - 10 mph  Cool (40 - 60) 2023-12-29\n","29  Partly Cloudy                NaN  10 - 15 mph  Cool (40 - 60) 2023-12-30\n","30          Clear                NaN   0 - 10 mph  Cool (40 - 60) 2023-12-31"],"text/html":["\n","  <div id=\"df-9b02efee-af2f-41fe-ac6c-b69d462efd34\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Clouds:</th>\n","      <th>Precipitation:</th>\n","      <th>Wind:</th>\n","      <th>Temperature:</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>2023-12-02</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Overcast</td>\n","      <td>Intermittent Rain</td>\n","      <td>10 - 15 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>2023-12-03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-04</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-05</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Partly Cloudy</td>\n","      <td>Intermittent Rain</td>\n","      <td>30 - 35 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-06</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>15 - 20 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-07</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-08</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-09</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Overcast</td>\n","      <td>Intermittent Rain</td>\n","      <td>20 - 25 mph</td>\n","      <td>Warm (60 - 80)</td>\n","      <td>2023-12-10</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Partly Cloudy</td>\n","      <td>Intermittent Rain</td>\n","      <td>30 - 35 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-11</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-12</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-13</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-14</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-15</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Overcast</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-16</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Overcast</td>\n","      <td>Intermittent Rain</td>\n","      <td>20 - 25 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-17</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Partly Cloudy</td>\n","      <td>Intermittent Rain</td>\n","      <td>30 - 35 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-18</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>30 - 35 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-19</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>20 - 25 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-20</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-21</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-22</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-23</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-24</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-25</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Overcast</td>\n","      <td>Intermittent Rain</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-26</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Overcast</td>\n","      <td>Intermittent Rain</td>\n","      <td>15 - 20 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Overcast</td>\n","      <td>Intermittent Rain</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-28</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-29</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Partly Cloudy</td>\n","      <td>NaN</td>\n","      <td>10 - 15 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-30</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","      <td>2023-12-31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b02efee-af2f-41fe-ac6c-b69d462efd34')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9b02efee-af2f-41fe-ac6c-b69d462efd34 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9b02efee-af2f-41fe-ac6c-b69d462efd34');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a5b47994-88d8-4b2b-b25c-875faca2c736\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5b47994-88d8-4b2b-b25c-875faca2c736')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a5b47994-88d8-4b2b-b25c-875faca2c736 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0dd770f1-5050-4a62-91ea-348bccd0bbbc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_weather')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0dd770f1-5050-4a62-91ea-348bccd0bbbc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_weather');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_weather","summary":"{\n  \"name\": \"df_weather\",\n  \"rows\": 31,\n  \"fields\": [\n    {\n      \"column\": \"Clouds:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Partly Cloudy\",\n          \"Overcast\",\n          \"Clear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precipitation:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Intermittent Rain\",\n          \"Light Rain\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"10 - 15 mph\",\n          \"20 - 25 mph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Warm (60 - 80)\",\n          \"Cool (40 - 60)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-01 00:00:00\",\n        \"max\": \"2023-12-31 00:00:00\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          \"2023-12-28 00:00:00\",\n          \"2023-12-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["merged_df = pd.merge(new_df, df_weather, on='Date')"],"metadata":{"id":"wO3hznEwwu5k","executionInfo":{"status":"ok","timestamp":1730211991745,"user_tz":240,"elapsed":28,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["merged_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wJGs5pKjw0fk","executionInfo":{"status":"ok","timestamp":1730211991745,"user_tz":240,"elapsed":27,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"4ec3de9a-abd5-429a-bc56-0e023cc5c938"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Shift', 'Hour', 'TOTAL', 'TRAILER', 'BUS', 'TRUCK', 'PED/BYC', 'LOD',\n","       'Date', 'Weekday', 'Clouds:', 'Precipitation:', 'Wind:',\n","       'Temperature:'],\n","      dtype='object')"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["new_order = ['Date','Weekday','Shift', 'Hour', 'TOTAL', 'TRAILER', 'BUS', 'TRUCK', 'PED/BYC', 'LOD', 'Clouds:', 'Precipitation:', 'Wind:',\n","       'Temperature:']\n","merged_df = merged_df[new_order]"],"metadata":{"id":"h3JgUOVK2SR0","executionInfo":{"status":"ok","timestamp":1730211991745,"user_tz":240,"elapsed":10,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["merged_df = merged_df[~merged_df['Date'].isin(avoid_date)]\n"],"metadata":{"id":"muiwV59D9btN","executionInfo":{"status":"ok","timestamp":1730211991745,"user_tz":240,"elapsed":9,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["merged_df.to_csv(save_path)"],"metadata":{"collapsed":true,"id":"EiBUYFLy2p4f","executionInfo":{"status":"ok","timestamp":1730211991745,"user_tz":240,"elapsed":8,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["merged_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"BWfbBUpT5Jz5","executionInfo":{"status":"ok","timestamp":1730211991904,"user_tz":240,"elapsed":167,"user":{"displayName":"Huyen Nguyen","userId":"04153024237824224782"}},"outputId":"a30d2685-5703-4ad8-ff05-f96266ed6159"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date Weekday Shift     Hour  TOTAL  TRAILER  BUS  TRUCK  PED/BYC  \\\n","0    2023-12-01  Friday     A   Slot 1      4        0    0      0        0   \n","1    2023-12-01  Friday     A   Slot 2      2        0    0      0        0   \n","2    2023-12-01  Friday     A   Slot 3      3        0    0      0        0   \n","3    2023-12-01  Friday     A   Slot 4      6        0    0      0        0   \n","4    2023-12-01  Friday     A   Slot 5     12        0    0      0        0   \n","...         ...     ...   ...      ...    ...      ...  ...    ...      ...   \n","1700 2023-12-31  Sunday     E   Slot 7      0        0    0      0        0   \n","1701 2023-12-31  Sunday     E   Slot 8      0        0    0      0        0   \n","1702 2023-12-31  Sunday     E   Slot 9      0        0    0      0        0   \n","1703 2023-12-31  Sunday     E  Slot 10      0        0    0      0        0   \n","1704 2023-12-31  Sunday     E  Slot 11      0        0    0      0        0   \n","\n","      LOD        Clouds: Precipitation:       Wind:    Temperature:  \n","0       0  Partly Cloudy     Light Rain  0 - 10 mph  Cool (40 - 60)  \n","1       0  Partly Cloudy     Light Rain  0 - 10 mph  Cool (40 - 60)  \n","2       0  Partly Cloudy     Light Rain  0 - 10 mph  Cool (40 - 60)  \n","3       0  Partly Cloudy     Light Rain  0 - 10 mph  Cool (40 - 60)  \n","4       0  Partly Cloudy     Light Rain  0 - 10 mph  Cool (40 - 60)  \n","...   ...            ...            ...         ...             ...  \n","1700    0          Clear            NaN  0 - 10 mph  Cool (40 - 60)  \n","1701    0          Clear            NaN  0 - 10 mph  Cool (40 - 60)  \n","1702    0          Clear            NaN  0 - 10 mph  Cool (40 - 60)  \n","1703    0          Clear            NaN  0 - 10 mph  Cool (40 - 60)  \n","1704    0          Clear            NaN  0 - 10 mph  Cool (40 - 60)  \n","\n","[1705 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-642127bc-a2d0-4bc4-84d5-e503b3b215b2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Weekday</th>\n","      <th>Shift</th>\n","      <th>Hour</th>\n","      <th>TOTAL</th>\n","      <th>TRAILER</th>\n","      <th>BUS</th>\n","      <th>TRUCK</th>\n","      <th>PED/BYC</th>\n","      <th>LOD</th>\n","      <th>Clouds:</th>\n","      <th>Precipitation:</th>\n","      <th>Wind:</th>\n","      <th>Temperature:</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","      <td>A</td>\n","      <td>Slot 1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","      <td>A</td>\n","      <td>Slot 2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","      <td>A</td>\n","      <td>Slot 3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","      <td>A</td>\n","      <td>Slot 4</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-12-01</td>\n","      <td>Friday</td>\n","      <td>A</td>\n","      <td>Slot 5</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Partly Cloudy</td>\n","      <td>Light Rain</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1700</th>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","      <td>E</td>\n","      <td>Slot 7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>1701</th>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","      <td>E</td>\n","      <td>Slot 8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>1702</th>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","      <td>E</td>\n","      <td>Slot 9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>1703</th>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","      <td>E</td>\n","      <td>Slot 10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","    <tr>\n","      <th>1704</th>\n","      <td>2023-12-31</td>\n","      <td>Sunday</td>\n","      <td>E</td>\n","      <td>Slot 11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Clear</td>\n","      <td>NaN</td>\n","      <td>0 - 10 mph</td>\n","      <td>Cool (40 - 60)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1705 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-642127bc-a2d0-4bc4-84d5-e503b3b215b2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-642127bc-a2d0-4bc4-84d5-e503b3b215b2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-642127bc-a2d0-4bc4-84d5-e503b3b215b2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fad46880-dbc5-4a22-8fe5-200ec9f62e22\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fad46880-dbc5-4a22-8fe5-200ec9f62e22')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fad46880-dbc5-4a22-8fe5-200ec9f62e22 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c4da2cfe-ddfe-4780-9082-cf3e56e53568\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('merged_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c4da2cfe-ddfe-4780-9082-cf3e56e53568 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('merged_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"merged_df","summary":"{\n  \"name\": \"merged_df\",\n  \"rows\": 1705,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-01 00:00:00\",\n        \"max\": \"2023-12-31 00:00:00\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          \"2023-12-28 00:00:00\",\n          \"2023-12-16 00:00:00\",\n          \"2023-12-24 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Friday\",\n          \"Saturday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Shift\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"B\",\n          \"E\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Slot 6\",\n          \"Slot 1\",\n          \"Slot 10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          62,\n          54,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRAILER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          6,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRUCK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PED/BYC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 40,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0,\n          18,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clouds:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Partly Cloudy\",\n          \"Overcast\",\n          \"Clear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precipitation:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Intermittent Rain\",\n          \"Light Rain\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"10 - 15 mph\",\n          \"20 - 25 mph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature:\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Warm (60 - 80)\",\n          \"Cool (40 - 60)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]}]}